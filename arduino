#include <Keyboard.h>  // Include the Keyboard library
bool botActive = false;

void setup() {
  Serial.begin(9600);
  while (!Serial);  // Wait for serial connection (only needed for boards like Leonardo/Micro)
  Serial.println("Waiting for 'start' or 'stop' commands...");
  // Start the keyboard library
  Keyboard.begin();
  
}

void attackDownTp() {
  // Press 'w' key
  Keyboard.press('w');
  delay(100);
  Keyboard.release('w');

  delay(100);

  // Press and hold Down Arrow
  Keyboard.press(KEY_DOWN_ARROW);
  delay(100);

  // Press and release Left Shift
  Keyboard.press(KEY_LEFT_SHIFT);
  delay(100);
  Keyboard.release(KEY_LEFT_SHIFT);

  // Release Down Arrow
  Keyboard.release(KEY_DOWN_ARROW);
}

void attackUpTp() {
  Keyboard.press('w');
  delay(100);
  Keyboard.release('w');

  delay(100);

  Keyboard.press(KEY_UP_ARROW);        // Up arrow (was 0xC8)
  delay(100);

  Keyboard.press(KEY_LEFT_SHIFT);      // Left shift (0x2A)
  delay(100);
  Keyboard.release(KEY_LEFT_SHIFT);

  Keyboard.release(KEY_UP_ARROW);
}


void attackTeleLeft() {
  Keyboard.press('w');
  delay(100);
  Keyboard.release('w');

  delay(100);

  Keyboard.press(KEY_LEFT_ARROW);      // Left arrow (0xCB)
  delay(100);

  Keyboard.press(KEY_LEFT_SHIFT);      // Left shift
  delay(100);
  Keyboard.release(KEY_LEFT_SHIFT);

  Keyboard.release(KEY_LEFT_ARROW);
}


void attackTeleRight() {
  Keyboard.press('w');
  delay(100);
  Keyboard.release('w');

  delay(100);

  Keyboard.press(KEY_RIGHT_ARROW);     // Right arrow (0xCD)
  delay(100);

  Keyboard.press(KEY_LEFT_SHIFT);
  delay(100);
  Keyboard.release(KEY_LEFT_SHIFT);

  Keyboard.release(KEY_RIGHT_ARROW);
}

void loop() {
  // Check for commands from the Python script
  if (Serial.available()) {
    String cmd = Serial.readStringUntil('\n');
    cmd.trim();

    if (cmd == "start") {
      botActive = true;
      Serial.println("Bot started.");
    } else if (cmd == "stop") {
      botActive = false;
      Serial.println("Bot stopped.");
    } else if (cmd == "exit") {
      // Special exit command to stop Arduino
      botActive = false;
      Serial.println("Bot stopped due to 'exit' command.");
    }
  }

  // If the bot is active, run bot logic
  if (botActive) {
    Serial.println("Running...");
    delay(500);  // Simulate bot activity

    attackTeleRight();
    delay(500);
    attackTeleLeft();
    delay(500);
  }
}
